<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
    <title>Blog</title>
    <link href="https://tritin5987.github.io/Blog/feed.xml" rel="self" />
    <link href="https://tritin5987.github.io/Blog" />
    <updated>2025-01-03T14:04:32+07:00</updated>
    <author>
        <name>Bùi Dương Trí</name>
    </author>
    <id>https://tritin5987.github.io/Blog</id>

    <entry>
        <title>Tiết lộ về Java và JavaScript</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/tiet-lo-ve-java-va-javascript.html"/>
        <id>https://tritin5987.github.io/Blog/tiet-lo-ve-java-va-javascript.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/20/DALLE-2024-12-30-21.25.39-A-creative-and-artistic-concept-illustrating-the-difference-between-Java-and-JavaScript.-On-the-left-side-depict-Java-as-a-powerful-structured-and.webp" medium="image" />

        <updated>2024-12-30T20:43:23+07:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://tritin5987.github.io/Blog/media/posts/20/DALLE-2024-12-30-21.25.39-A-creative-and-artistic-concept-illustrating-the-difference-between-Java-and-JavaScript.-On-the-left-side-depict-Java-as-a-powerful-structured-and.webp" alt="" />
                    <div id="post-content" class="article__content container-narrow">
<div class="content content--raw post-content lecture-content">
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/20/DALLE-2024-12-30-21.25.39-A-creative-and-artistic-concept-illustrating-the-difference-between-Java-and-JavaScript.-On-the-left-side-depict-Java-as-a-powerful-structured-and.webp" class="type:primaryImage" alt="" /></p>
                <div id="post-content" class="article__content container-narrow">
<div class="content content--raw post-content lecture-content">
<h2>JAVA LÀ GÌ?</h2>
Java là một ngôn ngữ lập trình có mục đích chung được thiết kế với một câu thần chú—“ <em>viết một lần, chạy mọi nơi</em> .” Các ứng dụng Java được biên dịch thành mã byte có thể chạy trên các triển khai của <em>Máy ảo Java</em> (JVM). JVM giúp thu hẹp khoảng cách giữa mã nguồn và các số 1 và 0 mà máy tính hiểu được. Bất kỳ máy nào đã cài đặt JVM đều có thể chạy Java. Trong phát triển web, Java nổi bật nhất với tư cách là ngôn ngữ phía máy chủ và ngôn ngữ lập trình được lựa chọn cho các ứng dụng di động trên nền tảng Android. Nó cũng vẫn có một sự hiện diện tốt trên giao diện người dùng dưới dạng một ứng dụng Java, mặc dù điều này không còn được ưa chuộng do những lo ngại về bảo mật.
<h2>JAVASCRIPT LÀ GÌ?</h2>
Bên cạnh HTML và CSS, JavaScript (được chuẩn hóa thành ECMAScript) được coi là một trong ba thành phần cốt lõi lớn của web. Được sử dụng bởi phần lớn các trang web, JavaScript là ngôn ngữ kịch bản thường chạy trong trình duyệt và làm cho các trang web trở nên năng động và tương tác. Ngày nay, JavaScript cũng đang phát triển nhanh chóng như một công nghệ phía máy chủ kể từ khi phát hành Node.js vào năm 2009.
<h2>JAVA VS. JAVASCRIPT: NHỮNG TƯƠNG TỰ CHÍNH</h2>
Dù khác nhau nhưng có một số điểm tương đồng cấp cao nhất đáng để xem xét, đặc biệt nếu bạn đang xem xét phát triển web khi so sánh Java với JavaScript. <strong>Lập trình hướng đối tượng (OOP)</strong> . Cả hai ngôn ngữ đều yêu cầu nhà phát triển viết mã theo đối tượng và mối quan hệ của chúng với nhau. Nói rộng ra, điều này cho phép cả hai ngôn ngữ truy cập vào các kỹ thuật như kế thừa, đóng gói và đa hình. <strong>Phát triển Front-End</strong> . Cả hai ngôn ngữ đều có thể được sử dụng trong các khía cạnh phát triển front-end. JavaScript có thể được nhúng trực tiếp vào HTML, được triển khai dưới dạng khung hoặc thư viện; Java có thể được sử dụng như một Java applet. <strong>Phát triển Back-End</strong>. Cả hai ngôn ngữ đều có thể được sử dụng ở phía máy chủ. Java từ lâu đã được sử dụng để hỗ trợ các công nghệ back-end như Apache, JBoss và WebSphere. Node.js đã trở thành bệ phóng cho các máy chủ hỗ trợ JavaScript
<h2>JAVA VS. JAVASCRIPT: SỰ KHÁC BIỆT CHÍNH</h2>
Điều quan trọng cần nhớ là Java và JavaScript được phát triển để phục vụ các mục đích hoàn toàn khác nhau. Java được thiết kế như một ngôn ngữ lập trình có mục đích chung để xây dựng các ứng dụng độc lập, trong khi JavaScript là ngôn ngữ kịch bản được xây dựng riêng để giao tiếp với các công nghệ web, cụ thể là HTML. Khi Java được Sun phát hành vào năm 1991, ban đầu nó được sử dụng để lập trình các thiết bị điện tử tiêu dùng như VCR. JavaScript được giới thiệu để sử dụng với Java dưới dạng ngôn ngữ kịch bản phía máy khách có thể chạy trong trình duyệt mà không cần phải biên dịch. Chúng ta hãy xem xét kỹ hơn một số khác biệt chính giữa hai ngôn ngữ này. <strong>Biên soạn so với Giải thích.</strong>Java được coi là một ngôn ngữ lập trình được biên dịch. JavaScript được coi là một ngôn ngữ kịch bản được giải thích. Sự khác biệt là ở cách triển khai: Java được biên dịch thành mã byte và chạy trên máy ảo, trong khi JavaScript có thể được trình duyệt diễn giải trực tiếp theo cú pháp mà nó được viết (mặc dù nó thường được rút gọn trong thực tế). <strong>Kiểm tra loại tĩnh và động</strong>. Java sử dụng kiểm tra kiểu tĩnh, trong đó kiểu của một biến được kiểm tra tại thời điểm biên dịch. Lập trình viên phải chỉ định loại (số nguyên, kép, chuỗi, v.v.) của bất kỳ biến nào họ tạo. JavaScript, giống như hầu hết các ngôn ngữ kịch bản, sử dụng kiểu gõ động, trong đó độ an toàn của kiểu được xác minh khi chạy. Người lập trình không bắt buộc phải chỉ định loại của bất kỳ biến nào họ tạo. Có nhiều ưu và nhược điểm đối với hai mô hình này, nhưng ưu điểm chính của kiểm tra kiểu tĩnh là lỗi kiểu được phát hiện sớm trong quá trình phát triển và vì trình biên dịch biết chính xác kiểu dữ liệu nào đang được sử dụng nên mã thường thực thi nhanh hơn hoặc sử dụng ít bộ nhớ hơn . Ưu điểm chính của kiểm tra loại động là năng suất của lập trình viên—bạn có thể tự do chỉ định các loại tùy ý. <strong>đồng thời</strong>. Khả năng xử lý việc thực thi một số chuỗi lệnh cùng lúc được xử lý rất khác nhau giữa Java và JavaScript. Java sử dụng nhiều luồng để thực hiện các tác vụ song song. JavaScript, đặc biệt là khi nó tồn tại dưới dạng Node.js trong các ứng dụng phía máy chủ, xử lý đồng thời trên một luồng thực thi chính thông qua một hệ thống hàng đợi được gọi là vòng lặp sự kiện và một hệ thống rẽ nhánh có tên là Node Clustering. Đối với hầu hết các trường hợp sử dụng, cả hai phương pháp đều hoạt động tốt, nhưng Java thường nhanh hơn vì luồng chuyển sang dựa trên luồng không luồng nhanh hơn nhiều so với giao tiếp liên quá trình (IPC). <strong>Dựa trên lớp vs Dựa trên nguyên mẫu</strong>. Java tuân theo tính kế thừa dựa trên lớp—một mối quan hệ dựa trên lớp, có thứ bậc, từ trên xuống, theo đó các thuộc tính được định nghĩa trong một lớp và được kế thừa bởi một thể hiện của lớp đó (một trong các thành viên của nó). Trong JavaScript, tính kế thừa là nguyên mẫu—tất cả các đối tượng có thể kế thừa trực tiếp từ các đối tượng khác. Hệ thống phân cấp được thực hiện trong JavaScript bằng cách gán một đối tượng làm nguyên mẫu với hàm tạo.
<h2>TÔI NÊN SỬ DỤNG JAVASCRIPT HAY JAVA CHO DỰ ÁN TIẾP THEO CỦA TÔI?</h2>
Như với tất cả các ngôn ngữ, sự lựa chọn thực sự phụ thuộc vào những gì bạn đang cố gắng xây dựng và những tài nguyên nào bạn có sẵn. JavaScript vẫn là một công nghệ web, trong khi Java là ngôn ngữ có mục đích chung có thể xây dựng mọi thứ. <u><strong>Bạn nên xem xét Java nếu dự án của bạn liên quan đến…</strong></u>
<ul>
<li>Ứng dụng Android</li>
<li>Phần mềm doanh nghiệp</li>
<li>Máy tính khoa học</li>
<li>Phân tích dữ liệu lớn</li>
<li>Lập trình mục đích chung của phần cứng</li>
<li>Các công nghệ phía máy chủ như Apache, JBoss, Geronimo, GlassFish, v.v.</li>
</ul>
<u><strong>Bạn nên xem xét JavaScript nếu dự án của bạn liên quan đến…</strong></u>
<ul>
<li>Các ứng dụng trang đơn động (SPA)</li>
<li>Các công nghệ Front-End như jQuery, AngularJS, Backbone.js, Ember.js, ReactJS, v.v.</li>
<li>Các công nghệ phía máy chủ như Node.js, MongoDB, Express.js, v.v.</li>
<li>Phát triển ứng dụng di động thông qua PhoneGap, React Native, v.v.</li>
<li>Hãy nhớ rằng không có danh sách nào là rộng rãi, đây chỉ là điểm khởi đầu để giúp bạn cảm nhận được những gì bạn có thể mong đợi và những từ khóa bạn có thể sử dụng để đánh giá ngôn ngữ tốt nhất cho nhu cầu của mình</li>
</ul>
<p> </p>
<p> </p>
<p>Nguồn: <a href="https://codegym.cc/vi/groups/posts/vi.36.tiet-lo-ve-java-va-javascript" target="_blank" rel="noopener noreferrer">https://codegym.cc/vi/groups/posts/vi.36.tiet-lo-ve-java-va-javascript</a></p>
</div>
</div>
<div class="article__discussion">
<div class="discussion-wrap">
<div class="share-and-rating">
<div class="share-and-rating__container">
<div class="share-and-rating__share">
<div class="discussion-sharing">
<div class="discussion-sharing__item">
<div class="soc-button-wrap"> </div>
</div>
<div class="discussion-sharing__item">
<div class="soc-button-wrap"> </div>
</div>
<div class="discussion-sharing__item">
<div class="soc-button-wrap"> </div>
</div>
</div>
</div>
<div class="share-and-rating__stars"> </div>
<div class="share-and-rating__rating"> </div>
</div>
</div>
<div id="discussion" class="comments-container"></div>
</div>
</div>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Tạo biểu đồ tròn bằng JavaScript</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/tao-bieu-do-tron-bang-javascript-2.html"/>
        <id>https://tritin5987.github.io/Blog/tao-bieu-do-tron-bang-javascript-2.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/18/pie-2.png" medium="image" />

        <updated>2024-12-28T16:48:30+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/18/pie-2.png" class="type:primaryImage" alt="" /></p>
                
<p><strong>Biểu đồ hình tròn</strong> có thể dễ dàng được tạo bằng JavaScript. Dưới đây là<strong> code mẫu JavaScript đơn giản nhất để tạo biểu đồ hình tròn</strong>.</p>
<p>JavaScript là một trong số ngôn ngữ lập trình phổ biến nhất hiện nay. Bạn có thể dùng JavaScript để lập trình web, ứng dụng, thậm chí cả tạo biểu đồ.</p>
<p>Tạo biểu đồ bằng code JavaScript không khó. Bạn có thể tham khảo mục code mẫu trên Quantrimang.com. Ở bài viết này, bạn sẽ được hướng dẫn code biểu đồ hình tròn đơn giản bằng JavaScript.</p>
<p>JavaScript Pie Chart chia một hình tròn thành nhiều phần theo tỷ lệ để người dùng thấy rõ đóng góp của chúng với con số tổng. Biểu đồ hình tròn hữu ích trong việc so sánh thị phần hoặc tỷ lệ của các nhân tố khác nhau. Biểu đồ hình tròn có thể tương tác, phản hồi nhanh, hỗ trợ hoạt ảnh và được xuất dưới dạng ảnh, đồng thời dễ dàng tích hợp với các framework JavaScript phổ biến.</p>
<p>Ví dụ bên dưới minh họa một mẫu biểu đồ hình tròn được tạo bằng JavaScript. Bài viết cũng cung cấp mã nguồn HTML cho bạn thoải mái chỉnh sửa hoặc lưu về máy để chạy nội bộ.</p>
<figure class="post__image"><img loading="lazy"  src="https://tritin5987.github.io/Blog/media/posts/18/pie.png" alt="" width="1103" height="731" data-src="https://st.quantrimang.com/photos/image/2023/03/10/javascript-pie-code.jpg" data-was-processed="true" data-i="0" sizes="(max-width: 48em) 100vw, 768px" srcset="https://tritin5987.github.io/Blog/media/posts/18/responsive/pie-xs.png 300w ,https://tritin5987.github.io/Blog/media/posts/18/responsive/pie-sm.png 480w ,https://tritin5987.github.io/Blog/media/posts/18/responsive/pie-md.png 768w ,https://tritin5987.github.io/Blog/media/posts/18/responsive/pie-lg.png 1024w ,https://tritin5987.github.io/Blog/media/posts/18/responsive/pie-xl.png 1360w ,https://tritin5987.github.io/Blog/media/posts/18/responsive/pie-2xl.png 1600w"></figure>
<div class="codebar"> </div>
<pre id="pre0" class="language-javascript"><code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
  /* CSS để căn giữa biểu đồ tròn theo chiều ngang và chiều dọc */
  body, html {
    height: 100%; /* Đảm bảo body và html có chiều cao 100% */
    margin: 0; /* Loại bỏ margin mặc định */
    display: flex; /* Sử dụng Flexbox */
    justify-content: center; /* Căn giữa theo chiều ngang */
    align-items: center; /* Căn giữa theo chiều dọc */
  }

  #chartContainer {
    height: 400px; /* Chiều cao biểu đồ */
    width: 400px; /* Chiều rộng biểu đồ */
  }
&lt;/style&gt;
&lt;script&gt;
window.onload = function() {

var chart = new CanvasJS.Chart("chartContainer", {
	animationEnabled: true,
	title: {
		text: "Phân bổ hệ điều hành máy tính - 2023"
	},
	data: [{
		type: "pie", /* Kiểu biểu đồ là tròn */
		startAngle: 240,
		yValueFormatString: "##0.00\"%\"",
		indexLabel: "{label} {y}", /* Hiển thị nhãn và giá trị phần trăm */
		dataPoints: [
			{ y: 76.0, label: "Windows" },
			{ y: 17.0, label: "macOS" },
			{ y: 5.0, label: "Linux" },
			{ y: 2.0, label: "Khác" }
		]
	}]
});
chart.render();

}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;!-- Căn giữa biểu đồ tròn --&gt;
&lt;div id="chartContainer"&gt;&lt;/div&gt;
&lt;script src="https://canvasjs.com/assets/script/canvasjs.min.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h2>Tùy biến biểu đồ</h2>
<p>Bạn có thể tùy biến color của từng phần riêng lẻ bằng color hoặc thay đổi góc của hình tròn bằng startAngle.</p>
<p>Một số lựa chọn tùy biến khác bao gồm: radius, fillOpacity, indexLabelPlacement…</p>
<p>Tham khảo từ:<a href="https://quantrimang.com/hoc/code-javascript-tao-bieu-do-do-thi-hinh-tron-195897" target="_blank" rel="noopener noreferrer">https://quantrimang.com/hoc/code-javascript-tao-bieu-do-do-thi-hinh-tron-195897</a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Hàm nhập xuất trong JavaScript</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/ham-nhap-xuat-trong-javascript.html"/>
        <id>https://tritin5987.github.io/Blog/ham-nhap-xuat-trong-javascript.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/16/6297fbe4-c020-4285-8f66-a79d78df3544.webp" medium="image" />

        <updated>2024-12-28T16:46:01+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/16/6297fbe4-c020-4285-8f66-a79d78df3544.webp" class="type:primaryImage" alt="" /></p>
                
<p>Trong thời buổi hiện tại, JavaScript đóng một vai trò rất lớn trong việc phát triển trang web. Các nhà phát triển front-end sử dụng JavaScript để tạo các ứng dụng web tương tác. Do đó, nhu cầu tuyển dụng các nhà phát triển JavaScript ngày càng tăng.</p>
<p>Qua nhiều năm, JavaScript cũng đã phát triển mạnh mẽ. ES6 đã giới thiệu nhiều tính năng mới cho ngôn ngữ này. Một trong những tính năng nổi bật nhất đó là khả năng chia sẻ code dễ dàng giữa các file JavaScript.</p>
<p>Nhập và xuất hàm trong JavaScript là những tính năng mới, chúng chắc chắn sẽ giúp bạn trở thành một nhà phát triển tốt hơn. Dưới đây là cách hoạt động của những tính năng này.</p>
<h2>Mô-đun JavaScript là gì?</h2>
<p>Mô-đun JavaScript là một file JavaScript chứa một bộ sưu tập code để bạn sử dụng. Mô-đun thường được viết trong các file riêng biệt và được nhập bằng từ khóa nhập. Do có thể sử dụng lại sau này, nó giúp bạn tiết kiệm rất nhiều thời gian và công sức.</p>
<figure class="lazy loaded lightbox"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2022/11/11/cach-nhap-va-xuat-ham-trong-javascript.jpg" alt="Cách nhập và xuất hàm trong JavaScript" width="422" height="211" data-src="https://st.quantrimang.com/photos/image/2022/11/11/cach-nhap-va-xuat-ham-trong-javascript.jpg" data-was-processed="true" data-i="0" data-is-external-image="true"></figure>
<p><strong>Ví dụ</strong>: Nếu bạn có một hàm được gọi là <strong>mathSum(),</strong> bạn có thể đưa nó vào một file khác và cho nó xuất hiện ở bất kỳ đâu trong dự án của bạn bằng cách xuất và nhập các hàm JavaScript mà không gặp bất kỳ phiền phức nào.</p>
<p>Một trong những lợi ích của việc sử dụng mô-đun là nó giúp cho code của bạn có tổ chức hơn. Nó cũng làm cho code của bạn dễ quản lý hơn và dễ gỡ lỗi hơn.</p>
<p>Để sử dụng file JavaScript làm mô-đun, bạn cần tạo lệnh trong tài liệu HTML của mình với type="module".</p>
<div class="codebar"> </div>
<pre id="pre0" class="prettyprint hljs language-javascript"><code>&lt;script type="module" src="fileName.js"&gt;&lt;/script&gt;</code></pre>
<p>Có hai loại mô-đun:</p>
<ul>
<li>Mô-đun ECMAScript: Mô-đun JavaScript tiêu chuẩn và được hỗ trợ bởi tất cả các trình duyệt chính.</li>
<li>Mô-đun CommonJS: Đây là loại mô-đun cũ và không còn được sử dụng rộng rãi.</li>
</ul>
<h2>Cách xuất hàm trong JavaScript</h2>
<p>Trong JavaScript, các hàm là các đối tượng hạng nhất (first-class) có thể được truyền dưới dạng đối số ngoài việc được sử dụng riêng. Xuất hàm là một cách hữu hiệu để di chuyển chúng vào các chương trình khác. Ngoài ra, xuất hàm còn có thể được sử dụng khi bạn muốn tạo ra các thư viện có thể tái sử dụng.</p>
<p>Xuất hàm trong JavaScript được thực hiện bằng cách sử dụng chức năng xuất. Hàm được xuất ra sẽ có thể được sử dụng bởi file hoặc script khác. Bằng cách xuất các hàm của riêng mình, chúng ta có thể thoải mái sử dụng chúng trong các file hoặc script khác mà không cần lo về vấn đề giấy phép, bản quyền.</p>
<p>Có hai cách để xuất hàm. Chúng ta sẽ xem xét từng cách một với các code mẫu.</p>
<p>Giả sử bạn có một file <strong>getPersonalDetails.js</strong> có chức năng trả về tên đầy đủ của người dùng sau khi nhận dữ liệu từ đầu vào. Hàm có dạng như sau:</p>
<div class="codebar"> </div>
<pre id="pre1" class="prettyprint hljs language-javascript"><code>function getFullName(fullName){
            fullName = prompt('What is your First Name');
           
            console.log(fullName);
        }</code></pre>
<ul>
<li>Bạn có thể xuất hàm này bằng cách sử dụng từ khóa export sau đó tới tên của hàm trong ngoặc nhọn. Nó trông như thế này:</li>
</ul>
<div class="codebar"> </div>
<pre id="pre2" class="prettyprint hljs language-javascript"><code>export {getFullName};</code></pre>
<ul>
<li>Phương thức thứ hai là thêm từ khóa export ngay trước khi khai báo hàm:</li>
</ul>
<div class="codebar"> </div>
<pre id="pre3" class="prettyprint hljs language-javascript"><code>export function getFullName (fullName){...}</code></pre>
<p><strong>Lưu ý</strong>: Sử dụng phương pháp thứ nhất bạn có thể xuất nhiều hàm. Bạn có thể làm điều đó bằng cách thêm tên của hàm muốn xuất vào trong ngoặc nhọn. Các hàm sẽ được phân cách với nhau bằng dấu phẩy.</p>
<p><strong>Ví dụ</strong>: Giả sử bạn có ba hàm trong file <strong>getPersonalDetails.js</strong> là <strong>getFullName(), getEmail(), getDob().</strong> Bạn có thể xuất tất cả các hàm đó bằng dòng code:</p>
<div class="codebar"> </div>
<pre id="pre4" class="prettyprint hljs language-javascript"><code>export {getFullName, getEmail, getDob};</code></pre>
<h2>Cách nhập hàm trong JavaScript</h2>
<p>Để sử dụng các mô-đun thì trước tiên bạn phải nhập chúng vào code của mình. Bất kỳ hàm nào cũng có thể được nhập bằng cách tham chiếu đầy đủ đường dẫn.</p>
<p>Nhập hàm là công việc khá đơn giản. JavaScript có sẵn một tính năng để bạn nhập các hàm của bạn từ các file khác. Nếu bạn muốn truy cập các hàm đó từ các mô-đun khác, bạn nên đưa vào khai báo hàm cho từng tiện ích của mình.</p>
<p><strong>Lưu ý</strong>: Một hàm cần nhập phải đã được xuất trong file gốc của nó.</p>
<p>Bạn có thể nhập các hàm từ một file khác bằng cách dùng từ khóa <strong>import.</strong> Nhập cho phép bạn chọn tải phần nào của file hoặc mô-đun.</p>
<p>Đây là cách nhập hàm <strong>getFullName</strong> của chúng ta từ <strong>getPersonalDetails.js:</strong></p>
<div class="codebar"> </div>
<pre id="pre5" class="prettyprint hljs language-javascript"><code>import {getFullName} from './getPersonalDetails.js'</code></pre>
<p>Điều này sẽ giúp hàm này có sẵn để sử dụng trong file hiện tại của chúng ta.</p>
<p>Nếu muốn nhập nhiều hàm, các hàm cần nhập phải được thêm vào trong ngoặc kép, các hàm được phân tách với nhau bởi dấu phảy.</p>
<div class="codebar"> </div>
<pre id="pre6" class="prettyprint hljs language-javascript"><code>import {getFullName, getEmail, getDob} from './getPersonalDetails.js'</code></pre>
<p>Có một cách khác để sử dụng chức năng nhập hàm. Phương pháp này cho phép bạn nhập tất cả các hàm đã xuất trong một file cụ thể. Bạn có thể thực hiện điều này bằng cách sử dụng cú pháp <strong>import*.</strong></p>
<p><strong>Ví dụ</strong>: Bạn có thể nhập tất cả các hàm đã xuất trong <strong>getPersonalDetails.js</strong> bằng cách thêm vào dòng code sau:</p>
<div class="codebar"> </div>
<pre id="pre7" class="prettyprint hljs language-javascript"><code>import * as personalDetailsModule from './getPersonalDetails.js'</code></pre>
<p>Dòng code trên sẽ tạo ra một đối tượng có tên là <strong>personalDetailsModule.</strong></p>
<p><strong>Lưu ý</strong>: Đó chỉ là một tên biến, bạn có thể đặt tên cho nó như thế nào cũng được.</p>
<p>Đối tượng này có chứa tất cả các hàm đã xuất trong <strong>getPersonalDetails.js.</strong> Các hàm được lưu trong đối tượng này và có thể truy cập được theo cách mà bạn truy cập các đối tượng khác.</p>
<p><strong>Ví dụ</strong>: Chúng ta có thể truy cập hàm <strong>getFullName</strong> bằng cách thêm dòng code sau:</p>
<div class="codebar"> </div>
<pre id="pre8" class="prettyprint hljs language-javascript"><code>personalDetailsModule.getFullName();</code></pre>
<h2>Mặc định xuất là gì?</h2>
<p>Mặc định xuất là một chức năng xuất đặc biệt. Nó được sử dụng nếu chỉ một biến đang được xuất từ một file. Nó cũng được sử dụng để tạo giá trị dự phòng cho một file hoặc mô-đun.</p>
<p>Dưới đây là một ví dụ mà chúng ta sẽ sử dụng hàm <strong>getFullName</strong> làm mặc định:</p>
<div class="codebar"> </div>
<pre id="pre9" class="prettyprint hljs language-javascript"><code>export default function getFullName (fullName){...}</code></pre>
<p><strong>Lưu ý</strong>: Bạn không thể có nhiều hơn một giá trị là mặc định trong mỗi mô-đun hoặc file.</p>
<p>Một hàm được sử dụng làm mặc định sẽ được nhập theo cách khác. Đây là cách nhập hàm <strong>getFullName</strong> của chúng ta khi được sử dụng làm mặc định:</p>
<div class="codebar"> </div>
<pre id="pre10" class="prettyprint hljs language-javascript"><code>import fullName from './getPersonalDetails.js'</code></pre>
<p>Dưới đây là những khác biệt:</p>
<ul>
<li>Không cần ngoặc nhọn xung quanh giá trị đã nhập là <strong>fullName.</strong></li>
<li><strong>fullName</strong> ở đây chỉ là một tên biến. Nó lưu trữ giá trị của bất kỳ hàm mặc định nào</li>
</ul>
<p>Nguồn:<a href="https://quantrimang.com/hoc/cach-nhap-va-xuat-ham-trong-javascript-193791" target="_blank" rel="noopener noreferrer"> https://quantrimang.com/hoc/cach-nhap-va-xuat-ham-trong-javascript-193791</a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Các cú pháp Java</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/cac-cu-phap-java.html"/>
        <id>https://tritin5987.github.io/Blog/cac-cu-phap-java.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/15/tty.jpg" medium="image" />

        <updated>2024-12-28T16:37:28+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/15/tty.jpg" class="type:primaryImage" alt="" /></p>
                
<p>Một chương trình Java có thể được định nghĩa như là tập hợp các đối tượng, giao tiếp thông qua việc gọi các thủ tục của nhau. Giờ chúng ta sẽ nhìn vào lớp, đối tượng, thủ tục và biến thực thể (instance variable) để xem xét ý nghĩa của chúng.</p>
<p>- Đối tượng: Đối tượng có trạng thái và hành vi. Ví dụ: Một bông hoa có các trạng thái như: tên, màu sắc, mùi hương; có hành vi: nở, tàn. Một đối tượng là một thể hiện của lớp.</p>
<p>- Lớp: Một lớp có thể được định nghĩa như một khuôn mẫu/thiết kế chi tiết, mô tả hành vi/trạng thái mà đối tượng của nó hỗ trợ.</p>
<p>- Thủ tục (hay phương thức - method): Một thủ tục về cơ bản là một hành vi. Nó là nơi mà logic được viết, dữ liệu được thao tác và tất cả các hành động được thực hiện.</p>
<p>- Các biến thực thể: Mỗi đối tượng có một tập hợp các biến thực thể duy nhất. Trạng thái của đối tượng được tạo bởi các giá trị được gán cho những biến này.</p>
<p>Bạn có thể gặp các khái niệm trên trong những ngôn ngữ lập trình hướng đối tượng quen thuộc như C++, Python, PHP. Và trong phạm vi của Java, mình sẽ chỉ nói về chúng trong ngôn ngữ Java. Dưới đây, là sự khác biệt giữa lớp và đối tượng trong Java.</p>
<div>
<table class="alt" border="1">
<thead>
<tr>
<td><strong>STT</strong></td>
<td><strong>Đối tượng</strong></td>
<td><strong>Lớp</strong></td>
</tr>
</thead>
<tbody>
<tr>
<td>1.</td>
<td>Đối tượng là thể hiện của 1 lớp.</td>
<td>Lớp là một khuôn mẫu hay thiết kế để tạo ra các đối tượng.</td>
</tr>
<tr>
<td>2.</td>
<td>Đối tượng là 1 thực thể trong thế giới thực như bút laptop, điện thoại, bàn, ghế,…</td>
<td>Lớp là một nhóm các đối tượng tương tự nhau.</td>
</tr>
<tr>
<td>3.</td>
<td>Đối tượng là 1 thực thể vật lý.</td>
<td>Lớp là 1 thực thể logic.</td>
</tr>
<tr>
<td>4.</td>
<td>Đối tượng được tạo ra chủ yếu từ từ khóa new. Ví dụ: Student s1=new Student();</td>
<td>Lớp được khai báo bằng việc sử dụng từ khóa class. Ví dụ: class Student{}</td>
</tr>
<tr>
<td>5.</td>
<td>Đối tượng có thể được tạo nhiều lần.</td>
<td>Lớp được khai báo 1 lần duy nhất.</td>
</tr>
<tr>
<td>6.</td>
<td>Đối tượng được cấp bộ nhớ khi nó được tạo ra.</td>
<td>Lớp không được cấp bộ nhớ khi nó được tạo.</td>
</tr>
<tr>
<td>7.</td>
<td>Có rất nhiều cách để tạo ra đối tượng trong java như từ khóa new, phương thức newInstance(), phương thức clone(), phương thức factory và deserialization.</td>
<td>Chỉ có một cách để định nghĩa lớp trong java sử dụng từ khoá class.</td>
</tr>
</tbody>
</table>
</div>
<h2>Cú pháp Java cơ bản</h2>
<p>Trước khi bắt đầu đi sâu vào lập trình Java, bạn phải ghi nhớ những điểm sau:</p>
<ul>
<li><strong>Phân biệt chữ hoa, chữ thường:</strong> Java là ngôn ngữ phân biệt chữ hoa, chữ thường, nghĩa là bạn viết Quantrimang, quantrimang hay QuanTriMang, QUANTRIMANG sẽ có ý nghĩa khác nhau.</li>
<li><strong>Tên lớp:</strong> Đối với tất cả các tên lớp, chữ cái đầu tiên nên được viết in hoa. Nếu sử dụng nhiều từ để tạo thành tên lớp thì mỗi chữ đầu tiên trong từ đó nên viết in hoa.</li>
</ul>
<p>Ví dụ: class JavaFirst, class QuanTriMang</p>
<ul>
<li><strong>Tên thủ tục:</strong> Tất cả tên thủ tục nên bắt đầu với chữ thường. Nếu nhiều ghép nhiều từ thành tên của thủ tục thì sau từ đầu tiên, các chữ cái đầu của từ nên viết in hoa.</li>
</ul>
<p>Ví dụ: public void myQuanTriMang()</p>
<ul>
<li><strong>Tên file chương trình:</strong> Tên file phải khớp chính xác với tên lớp. Khi lưu file, bạn đặt tên file là tên lớp và phần mở rộng là ".java", nhớ rằng Java phân biệt hoa thường, nếu tên file và tên lớp không khớp thì không thể biên dịch được.</li>
</ul>
<p>Ví dụ: Giả sử JavaFirst là tên lớp, thì file phải là JavaFirst.java</p>
<ul>
<li><strong>public static void main(String args[]):</strong> Chương trình Java bắt đầu từ thủ tục main(), đây là phần bắt buộc của mọi chương trình Java.</li>
</ul>
<h2>Định danh (Identifier) trong Java</h2>
<p>Tất các các thành phần Java đều phải được đặt tên. Tên được sử dụng cho lớp, biến, thủ tục và được gọi là định danh -identifier.</p>
<p>Có vài điểm cần lưu ý về định danh, đó là:</p>
<ul>
<li>Tất cả các định danh nên bắt đầu bằng chữ cái (A đến Z hoặc a đến z), ký tự tiền tệ ($) hoặc 1 dấu gạch dưới (_).</li>
<li>Sau ký tự đầu tiên, bạn có thể dùng bất kỳ ký tự nào để viết định danh.</li>
<li>Một từ khóa không được sử dụng như một định danh.</li>
<li>Định danh cũng phân biệt chữ hoa, chữ thường.</li>
<li>Ví dụ về định danh đúng: tuoi, $luong, _giatri_, __1_giatri.</li>
<li>Ví dụ về định danh sai: 123ghi, -tien.</li>
</ul>
<h2>Modifier trong Java</h2>
<p>Giống như các ngôn ngữ lập trình khác, bạn có thể sửa đổi các lớp, phương thức,... nhờ sử dụng các Modifier. Trong Java, có hai loại Modifier:</p>
<ul>
<li>Access Modifier: Bao gồm default, public, protected, private.</li>
<li>Non-access Modifier: Bao gồm final, abstract, strictfp.</li>
</ul>
<p>Chúng ta sẽ tìm hiểu về các Modifier này trong các bài hướng dẫn tiếp theo.</p>
<h2>Biến trong Java</h2>
<p>Java có các loại biến như sau:</p>
<ul>
<li>Biến Local<br>Biến của class (biến static)<br>Biến đối tượng (không phải biến static)</li>
</ul>
<h2>Mảng trong Java</h2>
<p>Mảng là đối tượng lưu trữ nhiều biến có cùng một kiểu dữ liệu. Mặc dù vậy, một mảng bản thân nó cũng là một đối tượng trong bộ nhớ. Chúng ta cũng sẽ tìm hiểu cách khai báo, xây dựng và khởi tạo đối tượng này trong các bài sắp tới.</p>
<h2>Java Enum</h2>
<p>Enum được giới thiệu trong Java 5.0. Enum hạn chế một biến để nó chỉ có thể nhận một giá trị trong số vài giá trị được chỉ định trước. Dễ hiểu hơn, enum dùng để định nghĩa tập hợp các số cố định, như ngày trong tuần, mùa trong năm,...</p>
<p>Việc sử dụng enum có thể giúp làm giảm số lượng các lỗi trong code.</p>
<p>Ví dụ, chúng ta giả sử một ứng dụng cho cửa hàng nước ép hoa quả, có thể giới hạn các kiểu cỡ cốc gồm có cỡ nhỏ, vừa và lớn. Điều này có thể đảm bảo giúp để mọi người khác không thể thêm các cỡ khác ngoài nhỏ, vừa, lớn.</p>
<div class="codebar"> </div>
<pre id="pre0" class="prettyprint notranslate prettyprinted hljs language-typescript"><code>class FreshJuice {

   enum FreshJuiceSize{ SMALL, MEDIUM, LARGE }
   FreshJuiceSize size;
}

public class FreshJuiceTest {

   public static void main(String args[]){
      FreshJuice juice = new FreshJuice();
      juice.size = FreshJuice. FreshJuiceSize.MEDIUM ;
      System.out.println("Size: " + juice.size);
   }
}</code></pre>
<p>Kết quả đầu ra:</p>
<div class="codebar"> </div>
<pre id="pre1" class="prettyprint hljs language-yaml"><code>Size: MEDIUM</code></pre>
<p><strong>Ghi chú:</strong> Enum có thể được khai báo riêng hoặc khai báo trong một lớp. Thủ tục, biến, constructor cũng có thể đươc định nghĩa trong Enum.</p>
<h2>Các từ khóa trong Java</h2>
<p>Danh sách dưới đây là các từ khóa (key) trong Java. Chúng không thể sử dụng như hằng số, biến hay bất kỳ tên định danh nào khác. Nên khi đặt tên biến, hằng, thủ tục, lớp,... bạn phải tránh những từ khóa này ra nhé.</p>
<table class="table table-bordered" border="1">
<tbody>
<tr>
<td>abstract</td>
<td>assert</td>
<td>boolean</td>
<td>break</td>
</tr>
<tr>
<td>byte</td>
<td>case</td>
<td>catch</td>
<td>char</td>
</tr>
<tr>
<td>class</td>
<td>const</td>
<td>continue</td>
<td>default</td>
</tr>
<tr>
<td>do</td>
<td>double</td>
<td>else</td>
<td>enum</td>
</tr>
<tr>
<td>extends</td>
<td>final</td>
<td>finally</td>
<td>float</td>
</tr>
<tr>
<td>for</td>
<td>goto</td>
<td>if</td>
<td>implements</td>
</tr>
<tr>
<td>import</td>
<td>instanceof</td>
<td>int</td>
<td>interface</td>
</tr>
<tr>
<td>long</td>
<td>native</td>
<td>new</td>
<td>package</td>
</tr>
<tr>
<td>private</td>
<td>protected</td>
<td>public</td>
<td>return</td>
</tr>
<tr>
<td>short</td>
<td>static</td>
<td>strictfp</td>
<td>super</td>
</tr>
<tr>
<td>switch</td>
<td>synchronized</td>
<td>this</td>
<td>throw</td>
</tr>
<tr>
<td>throws</td>
<td>transient</td>
<td>try</td>
<td>void</td>
</tr>
<tr>
<td>volatile</td>
<td>while</td>
<td> </td>
</tr>
</tbody>
</table>
<h2>Comment trong Java</h2>
<p>Java hỗ trợ comment trên 1 dòng hoặc nhiều dòng giống như C, C++, Python. Tất cả các ký tự trong comment sẽ được trình biên dịch Java bỏ qua.</p>
<p>Ví dụ:</p>
<div class="codebar"> </div>
<pre id="pre2" class="prettyprint notranslate prettyprinted hljs language-typescript"><code>public class MyFirstJavaCode {

   /* Đây là chương trình Java đầu tiên.
    * Nó sẽ in ra màn hình 'Hello World'.
    * Đây là ví dụ comment trên nhiều dòng.    * By Quantrimang.com
    */

   public static void main(String []args) {
      // Đây là ví dụ comment trên 1 dòng.
      /* Đây vẫn là ví dụ comment trên một dòng by Quantrimang.com. */
      System.out.println("Hello World");
   }
}</code></pre>
<p>Đầu ra:</p>
<div class="codebar"> </div>
<pre id="pre3" class="prettyprint hljs language-undefined"><code>Hello World </code></pre>
<h2>Sử dụng dòng trống</h2>
<p>Một dòng chỉ chứa khoảng trắng, có thể là comment, được gọi là dòng trống và Java hoàn toàn bỏ qua nó.</p>
<h2>Tính kế thừa trong Java</h2>
<p>Trong Java, các lớp có thể được suy ra (hay dẫn xuất) từ các lớp khác. Nếu bạn cần tạo một lớp mới mà đã có một lớp chứa những đoạn code bạn cần thì có thể suy ra lớp mới từ lớp đã có đó.</p>
<p>Tính kế thừa cho phép bạn tái sử dụng các trường, thủ tục của lớp đã có mà không cần viết lại trong lớp mới. Trong trường hợp này, lớp hiện có được gọi là superclass, lớp mới được suy ra gọi là subclass.</p>
<h2>Interface trong Java</h2>
<p>Trong ngôn ngữ lập trình Java, một interface có thể được định nghĩa như là một contract giữa các đối tượng về cách giao tiếp với nhau. Các interface đóng vai trò thiết yếu khi nó đi với khái niệm về tính kế thừa.</p>
<p>Một interface định nghĩa các thủ tục, các subclass nên sử dụng. Nhưng sự thực thi của các phương thức lại hoàn toàn phụ thuộc vào các subclass.</p>
<p>Nguồn: <a href="https://quantrimang.com/hoc/cu-phap-java-co-ban-145843" target="_blank" rel="noopener noreferrer">https://quantrimang.com/hoc/cu-phap-java-co-ban-145843</a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Cách tải Java</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/cach-tai-java-2.html"/>
        <id>https://tritin5987.github.io/Blog/cach-tai-java-2.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/14/d.jpg" medium="image" />

        <updated>2024-12-28T16:34:44+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/14/d.jpg" class="type:primaryImage" alt="" /></p>
                
<p>Để lập trình Java trên máy tính, bạn cần phải cài đặt môi trường Java, bài viết này sẽ hướng dẫn bạn cách tải và cài đặt Java trên máy tính.</p>
<h2>Các bước cài Java trên máy tính</h2>
<ul>
<li>Tải Java dựa vào phiên bản hệ điều hành đang chạy trên máy tính.</li>
<li>Bạn cần tích vào icon hình tròn trước Accept License Agreement để có thể tải file.</li>
<li>Chạy file .exe để cài Java.</li>
<li>Thiết lập Environment variables để trỏ tới đúng các thư mục cài đặt.</li>
</ul>
<p><strong>Thiết lập Path trên Windows:</strong></p>
<p>Giả sử, bạn cài Java trong thư mục: <em>c:\Program Files\java\jdk1.8.0_162</em></p>
<p>Nhấn phím<strong> Windows + E</strong> &gt; nhấp chuột phải vào<strong> My Computer</strong> hoặc <strong>My PC</strong> hoặc <strong>This PC</strong> (tùy Windows) &gt; <strong>Properties</strong></p>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-1.jpg" alt="Cài đặt Java trên máy tính bước 1" width="420" height="406" data-src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-1.jpg" data-was-processed="true" data-i="0" data-is-external-image="true"></figure>
<p>Chọn <strong>Advanced system settings</strong> ở bên tay trái hoặc<strong> Change settings</strong> ở góc dưới bên phải đều được.</p>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-2.png" alt="Cài đặt Java trên máy tính bước 2" width="713" height="460" data-src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-2.png" data-i="1" data-was-processed="true" data-is-external-image="true"></figure>
<p>Nhấp vào nút <strong>Environment variables</strong> bên dưới tab<strong> Advanced</strong>.</p>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-3.jpg" alt="Cài đặt Java trên máy tính bước 3" width="413" height="468" data-src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-3.jpg" data-i="2" data-was-processed="true" data-is-external-image="true"></figure>
<p>Trong cửa sổ hiện ra, bạn nhấp vào nút <strong>New</strong> như hình:</p>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-6.png" alt="Cài đặt Java trên máy tính bước 4" width="618" height="585" data-src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-6.png" data-i="3" data-was-processed="true" data-is-external-image="true"></figure>
<p>Trong ô <strong>Variable name</strong>, bạn nhập<strong> PATH</strong>, trong ô <strong>Variable value</strong>, bạn nhập đường dẫn của thư mục bin của Java trong ổ C. Trên máy mình nó là: C:\Program Files\Java\jdk1.8.0_162\bin.<code></code></p>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-5.png" alt="Cài đặt Java trên máy tính bước 5" width="668" height="384" data-src="https://st.quantrimang.com/photos/image/2018/01/30/Cai-dat-java-tren-pc-5.png" data-i="4" data-was-processed="true" data-is-external-image="true"></figure>
<p>Hãy nhập đúng hai giá trị này, nếu không bạn sẽ không thể chạy file Java được. Nó sẽ tạo ra thông báo lỗi sau khi biên dịch file Java:</p>
<div class="codebar"> </div>
<pre id="pre0" class="prettyprint hljs language-html"><code>C:\java files&gt;javac Hello.java
'javac' is not recognized as an internal or external command, operable program or batch file</code></pre>
<p><strong>Thiết lập Path trên Linux, Unix, Solaris, FreeBSD:</strong></p>
<p>Path nên được thiết lập để trỏ đến nơi mà các chương trình Java được cài đặt. Ví dụ, nếu sử dụng bash như là shell thì thêm dòng sau vào cuối: '.bashrc: export PATH = /path/to/java:$PATH'.</p>
<h2>Các trình soạn thảo Java phổ biến</h2>
<p>Để viết các chương trình Java, bạn sẽ cần một trình soạn thảo văn bản. Hiện có nhiều IDE, nhưng dưới đây là vài cái phù hợp hơn cả để soạn thảo code Java:</p>
<ul>
<li>Notepad: Trên Windows, bạn có thể sử dụng bất kỳ trình soạn thảo đơn giản nào như Notepad, TextPad.</li>
<li>Netbeans: Một IDE Java miễn phí, mã nguồn mở.</li>
<li>Eclipse: Cũng là mã nguồn mở và miễn phí.</li>
</ul>
<p>Nguồn: <a href="https://quantrimang.com/cong-nghe/tai-va-cai-dat-java-tren-may-tinh-145838" target="_blank" rel="noopener noreferrer">https://quantrimang.com/cong-nghe/tai-va-cai-dat-java-tren-may-tinh-145838</a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Lộ trình trở thành Java Developer trong năm 2024</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/lo-trinh-tro-thanh-java-developer-trong-nam-2024.html"/>
        <id>https://tritin5987.github.io/Blog/lo-trinh-tro-thanh-java-developer-trong-nam-2024.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/11/y.png" medium="image" />

        <updated>2024-12-27T15:03:43+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/11/y.png" class="type:primaryImage" alt="" /></p>
                
<p>Cuối năm 2021, Java được xếp hạng là ngôn ngữ lập trình phổ biến thứ hai trên bảng xếp hạng TIOBE, chỉ xếp sau Python. TIOBE đo lường mức độ phổ biến của các ngôn ngữ lập trình khác nhau và cập nhật hàng tháng.</p>
<p>Dựa vào đó, chúng ta có thể thấy tương lai của Java có vẻ tươi sáng và rằng nhu cầu tuyển dụng các chuyên gia lập trình và nhà phát triển Java full-stack trong tương lai vẫn sẽ cao. Do vậy, nếu bạn muốn trở thành nhà phát triển Java thì hãy xem qua lộ trình dưới đây. Ngoài ra, bạn sẽ còn biết cách tận dụng tốt nhất kiến thức Java để tạo ra một sự nghiệp thú vị và có thu nhập cao.</p>
<p>Đầu tiên, chúng ta sẽ tìm hiểu nhanh về Java và vai trò của Java trong điện toán đám mây trong bối cảnh các lựa chọn nghề nghiệp của nhà phát triển.</p>
<h2>Tóm tắt ngắn gọn về Java</h2>
<p>Theo trang web của Java, Java là “ngôn ngữ lập trình và nền tảng điện toán được Sun Microsystems phát hành lần đầu tiên vào năm 1995.” Java là một ngôn ngữ hướng đối tượng, dựa trên lớp, có mục đích chung được sử dụng rộng rãi cho các ứng dụng viết mã và đã được các nhà phát triển phổ biến trong hơn 20 năm. Mã được biên dịch của ứng dụng Java (được gọi là "bytecode") chạy trên hầu hết các hệ điều hành, bao gồm Windows, Mac OS và Linux.</p>
<p>Java được tạo ra bởi các kỹ sư của Sun, được gọi là Green Team, dùng làm ngôn ngữ cho các thiết bị kỹ thuật số như hộp giải mã tín hiệu số và TV. Tuy nhiên, ngôn ngữ này quá phức tạp đối với máy móc vào thời điểm đó, nhưng nó lại phù hợp tuyệt vời cho lập trình Internet. Ban đầu, Java được gọi là "Greentalk", sau đó là "Oak" và cuối cùng là "Java".</p>
<p>Cho đến nay đã có 20 phiên bản Java được phát hành, phiên bản thứ 20 phát hành vào tháng 3 năm 2022.</p>
<h2>Nhà phát triển Java là ai?</h2>
<p>Một nhà phát triển Java đảm nhận việc phát triển phần mềm và ứng dụng bằng ngôn ngữ lập trình Java. Anh ấy/cô ấy cộng tác với các kỹ sư phần mềm và nhà phát triển web khác để sử dụng Java cho việc phát triển các ứng dụng, trang web, v.v.</p>
<p>Nhà phát triển Java cần phải tham gia cho đến khi kết thúc toàn bộ vòng đời phát triển của một giải pháp hoặc sản phẩm. Nhà phát triển cũng cần có khả năng phân tích và xác định các vấn đề kỹ thuật liên quan đến ngôn ngữ Java và phải đưa ra các giải pháp hiệu quả, khả thi.</p>
<h3>Xử lý ngoại lệ</h3>
<p>Trong Java, ngoại lệ có nghĩa là một sự kiện làm gián đoạn luồng sự kiện thông thường trong một chương trình. Xử lý ngoại lệ là một phương pháp để xử lý các lỗi runtime như RemoteException, IOExcpetion, SQLException, v.v.</p>
<h3>Đa luồng</h3>
<p>Một luồng trong Java đề cập đến một quy trình nhẹ đòi hỏi ít tài nguyên hơn để tạo và chia sẻ tài nguyên quy trình. Đa luồng có nghĩa là một quá trình thực thi hai hoặc nhiều luồng cùng một lúc để tận dụng tối đa CPU.</p>
<h3>Input Output Java</h3>
<p>Input-Output Java là một khái niệm quan trọng khi làm việc với lập trình Java. Nó bao gồm các yếu tố như đầu vào (Input), đầu ra (Output) và luồng. Đầu vào đề cập đến dữ liệu chúng ta cung cấp cho chương trình, trong khi Đầu ra là dữ liệu chúng ta nhận được từ chương trình. Luồng đại diện cho chuỗi luồng dữ liệu.</p>
<h3>Java nâng cao</h3>
<p>Để có một bước nhảy vọt trong việc học Java, bạn nên làm quen với các khái niệm sau:</p>
<ul>
<li>Servlets</li>
<li>Java Persistence API</li>
<li>Java Database Connectivity</li>
<li>JAX-RS</li>
<li>Thymeleaf</li>
<li>Design patterns</li>
</ul>
<h3>Core Java</h3>
<p>Core Java được sử dụng để xây dựng các ứng dụng điện toán hoặc ứng dụng dành cho máy tính. Về cơ bản, nó dựa trên kiến trúc một tầng.</p>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2022/12/29/lo-trinh-tro-thanh-nha-phat-trien-java.jpg" alt="Lộ trình trở thành nhà phát triển Java" width="660" height="371" data-src="https://st.quantrimang.com/photos/image/2022/12/29/lo-trinh-tro-thanh-nha-phat-trien-java.jpg" data-i="0" data-was-processed="true" data-is-external-image="true"></figure>
<h2>Lộ trình dành cho nhà phát triển Java</h2>
<p>Hãy cùng khám phá lộ trình trở thành nhà phát triển Java full-stack. Các nhà phát triển full-stack có thể làm việc tốt với cả phần mềm front-end và back-end (còn được gọi là phía máy khách và phía máy chủ) và tính linh hoạt này khiến họ luôn được săn đón. Full-stack developer có thể làm hầu như tất cả mọi việc.</p>
<p>Lưu ý rằng lộ trình dành cho nhà phát triển Java này không phải là lộ trình duy nhất để thành công. Như người ta vẫn nói, có nhiều con đường lên đỉnh núi. Tuy nhiên, lộ trình cụ thể này đưa ra một cách tiếp cận cân bằng, toàn diện và thực tế để bạn tham khảo.</p>
<h3>Phát triển front-end</h3>
<p>Những công cụ và kỹ năng này là nền tảng để bạn xây dựng phần còn lại của lộ trình dành cho nhà phát triển Java của mình. Bạn nên thành thạo các công cụ phát triển web cơ bản dưới đây:</p>
<ul>
<li>CSS</li>
<li>HTML</li>
<li>JavaScript</li>
<li>TypeScript</li>
</ul>
<p>Sau đó, bạn cần làm quen với các Môi trường Phát triển Tích hợp (Integrated Development Environment - IDE) dưới đây:</p>
<ul>
<li>Sublime Text 3</li>
<li>Visual Studio Code IDE</li>
</ul>
<p>Và tất nhiên, vì đang tập trung vào phát triển giao diện người dùng, nên bạn cần biết các framework front-end như:</p>
<ul>
<li>Angular</li>
<li>React</li>
<li>VueJS</li>
</ul>
<p>Cuối cùng, bạn nên làm quen với các thư viện Giao diện người dùng (User Interface - UI) như Bootstrap CSS và Material UI.</p>
<h3>Phát triển back-end</h3>
<p>Đối với người mới bắt đầu thì đầu tiên bạn cần thành thạo Core Java, bao gồm các tính năng của Java 8, còn được gọi là lập trình chức năng Java.</p>
<p>Nói về Java, các nhà phát triển back-end cũng cần học các công cụ xây dựng Java như:</p>
<ul>
<li>Gradle</li>
<li>Maven</li>
</ul>
<p>Giống như phát triển front-end, phát triển back-end cũng cần các IDE của riêng nó như:</p>
<ul>
<li>Eclipse IDE</li>
<li>Intellij IDEA</li>
<li>Spring Tool Suite</li>
</ul>
<p>Các nhà phát triển back-end cần làm việc với các cơ sở dữ liệu khác nhau, do đó họ cần phải làm quen với No SQL và các cơ sở dữ liệu quan hệ như:</p>
<ul>
<li>Cơ sở dữ liệu No SQL
<ul>
<li>Apache Cassandra</li>
<li>MongoDB</li>
<li>RavenDB</li>
<li>Redis</li>
</ul>
</li>
<li>Cơ sở dữ liệu quan hệ
<ul>
<li>MS-SQL Server</li>
<li>MySQL</li>
<li>Oracle</li>
<li>PostgreSQL</li>
<li>SQL Server</li>
<li>Cơ sở dữ liệu Cloud</li>
<li>CosmosDB</li>
<li>DynamoDB</li>
</ul>
</li>
</ul>
<p>Các công nghệ back-end cần thiết khác bao gồm:</p>
<ul>
<li>Xây dựng DAO/Repository Layers
<ul>
<li>JPA/Hibernate</li>
<li>Spring Data JPA</li>
</ul>
</li>
<li>Xây dựng REST APIs trong Java
<ul>
<li>Jersey REST Framework</li>
<li>RestEasy Framework</li>
<li>Spring Boot</li>
</ul>
</li>
<li>Bảo mật REST APIs sử dụng Spring Security
<ul>
<li>Xác thực</li>
<li>JWT</li>
<li>Ủy quyền dựa trên vai trò</li>
</ul>
</li>
</ul>
<h2>Các kỹ năng mà nhà phát triển Java bắt buộc phải có</h2>
<ul>
<li>Linux: Vì hầu hết các ứng dụng Java đều ở phía máy chủ nên chúng thường chạy trên các máy chủ Linux. Do đó, việc tìm hiểu một số lệnh và khái niệm Linux liên quan đến các chức năng khác nhau là rất quan trọng với nhà phát triển Java.</li>
<li>Cấu trúc dữ liệu và giải thuật: Cấu trúc dữ liệu và giải thuật là các thành phần cơ bản của bất kỳ ngôn ngữ lập trình nào. Các cấu trúc dữ liệu như danh sách Linkedin, cây nhị phân, bảng băm, hàng đợi, v.v. là những cấu trúc quan trọng cần học.</li>
<li>Các nguyên tắc cơ bản của khoa học máy tính: Trước khi học bất kỳ ngôn ngữ nào bạn cũng phải nhận thức được các nguyên tắc cơ bản. Nó giúp bạn tạo ra các ứng dụng web hoặc phần mềm mạnh mẽ.</li>
<li>SQL: Học SQL giúp bạn khắc phục các sự cố back-end như một chuyên gia.</li>
<li>Git và Github: Là một lập trình viên Java, việc làm quen với các khái niệm Git và GitHub là vô cùng quan trọng. Chúng là những hệ thống kiểm soát phiên bản phổ biến.</li>
</ul>
<h3>Công cụ xây dựng</h3>
<p>Để xây dựng các dự án Java, bạn nên làm quen với các công cụ xây dựng khác nhau. Sau đây là một số công cụ để xây dựng dự án Java của bạn:</p>
<ul>
<li>Ant</li>
<li>Maven</li>
<li>Gradle</li>
</ul>
<h3>Máy chủ</h3>
<p>Việc triển khai sẽ sẵn sàng khi bạn đã phát triển xong ứng dụng web của mình. Triển khai xảy ra trên máy chủ; do đó, bạn nên biết về chúng. Sau đây là một số máy chủ mà bạn có thể sử dụng để triển khai các ứng dụng web của mình:</p>
<ul>
<li>Weblogic</li>
<li>WebSphere</li>
<li>Jetty</li>
<li>JBOSS</li>
<li>Tomcat</li>
</ul>
<h3>API Java</h3>
<p>API là các thành phần phần mềm rất quan trọng được đóng gói cùng với JDK. Chúng thường bao gồm các giao diện, giao diện người dùng và các lớp. Chúng tạo điều kiện cho các nhà phát triển tích hợp nhiều trang web và ứng dụng trong khi cung cấp thông tin theo thời gian thực. Sau đây là một số API Java mà bạn cần tìm hiểu:</p>
<ul>
<li>Java IO</li>
<li>Java concurrency</li>
<li>Java collections framework</li>
</ul>
<h3>Java Frameworks</h3>
<p>Java có một hệ sinh thái rộng lớn đồng nghĩa với việc có nhiều framework và thư viện khác nhau cho mọi thứ. Dưới đây là một số framework Java mà bạn nên tìm hiểu:</p>
<ul>
<li>Hibernate</li>
<li>Log4j</li>
<li>JUnit</li>
<li>Spring boot</li>
<li>Spring</li>
</ul>
<h3>Kiểm thử</h3>
<p>Kiểm thử là một kỹ năng quan trọng đối với các nhà phát triển Java, đặc biệt là kiểm thử tích hợp, kiểm thử đơn vị và kiểm thử tự động hóa.</p>
<p>JUnit và Mockito là hai trong số các thư viện kiểm thử và kiểm thử đơn vị nổi tiếng nhất. Các thư viện nâng cao hơn, chẳng hạn như Robot Framework và Cucumber cũng hữu ích trong nhiều trường hợp. Mặt khác, mặc dù Mockito là một thư viện rộng lớn, các thư viện khác cũng có thể hữu ích như EasyMock và PowerMock.</p>
<h3>Thư viện tiện ích</h3>
<p>Từ việc gửi yêu cầu HTTP đến phân tích cú pháp JSON, bạn sẽ có các thư viện để thực hiện hầu hết mọi thứ trong Java. Các thư viện tiện ích như Google Guava và Apache Commons rất quan trọng đối với bất kỳ nhà phát triển Java nào vì chúng bổ sung một cách tối ưu cho các thư viện JDK.</p>
<h3>ORM</h3>
<p>ORM có nghĩa là Ánh xạ quan hệ đối tượng (Object Relational Mapping). Nó là một công cụ ứng dụng trung gian nằm giữa ứng dụng web và cơ sở dữ liệu. Nó chuyển đổi dữ liệu giữa các đối tượng Java và các bảng cơ sở dữ liệu. Sau đây là một số công cụ ORM:</p>
<ul>
<li>EclipseLink</li>
<li>OpenJPA</li>
<li>MyBatis</li>
<li>TopLink</li>
</ul>
<h2>Kỹ năng phát triển kiến thức chung cho lộ trình trở thành nhà phát triển Java của bạn</h2>
<ul>
<li>Tìm hiểu GIT và cách tạo một vài repo trên GitHub. Sẵn sàng chia sẻ code của bạn với người khác. GIT là một công cụ có giá trị cho việc kiểm soát phiên bản và quản lý dự án.</li>
<li>Làm quen với giao thức HTTP(S), các phương thức yêu cầu (DELETE, GET, OPTIONS, POST, PUT, PATCH).</li>
<li>Nếu bạn chưa trở thành chuyên gia tìm kiếm Google, hãy học cách để biến mình thành chuyên gia, đặc biệt là phải thông thạo các kỹ thuật tìm kiếm nâng cao.</li>
<li>Đọc về các thuật toán và cấu trúc dữ liệu.</li>
<li>Tìm hiểu về Docker và cách triển khai các dự án trong container Docker.</li>
<li>Tìm hiểu Jenkins để giúp bạn nắm vững các khái niệm về Tích hợp liên tục/Triển khai liên tục (CI/CD).</li>
<li>Tìm hiểu phần mềm quản lý dự án như Jira để giúp theo dõi các vấn đề và lỗi.</li>
</ul>
<h3>Triển khai</h3>
<p>Đám mây là tương lai, do vậy hãy triển khai thành thạo với:</p>
<ul>
<li>AWS Cloud</li>
<li>Azure Cloud</li>
<li>Google Cloud</li>
<li>Heroku Cloud</li>
</ul>
<h3>Kiểm thử</h3>
<p>Hãy tự làm quen với các tài nguyên kiểm thử Hành vi, Tích hợp, Tải và Đơn vị như:</p>
<ul>
<li>Assertj</li>
<li>CitrusFramework</li>
<li>Cucumber-jvm</li>
<li>Gatling</li>
<li>Hoverfly-java</li>
<li>Mockserver</li>
<li>Rest-assured</li>
<li>Truth</li>
</ul>
<p>Ngoài ra, hãy xem xét việc học Selenium để hoàn thành các công việc kiểm thử từ đầu đến cuối.</p>
<p>Có một vài tài nguyên khác mà bạn có thể đưa vào lộ trình của mình. Ví dụ: Nếu thêm vào các yếu tố như Logging, Caching, Object-Relational Mapping (ORMs), API Clients, và Task Scheduling thì lộ trình của bạn sẽ cực kỳ phức tạp nhưng lại toàn diện hơn. Hơn nữa, khi bạn luôn bổ sung thêm các kỹ năng mới thì sự nghiệp nhà phát triển Java của bạn sẽ cực kỳ bền vững và có nhiều khả năng thăng tiến.</p>
<h2>Các lựa chọn nghề nghiệp của nhà phát triển Java</h2>
<p>Có rất nhiều nghề nghiệp mà nhà phát triển Java có thể lựa chọn. Chúng bao gồm:</p>
<ul>
<li><strong>Nhà phát triển cấp thấp</strong>: Hãy coi đây là một vị trí để bạn vào nghề. Hầu hết mọi người đều bắt đầu từ vị trí này. Các nhà phát triển cấp thấp viết, kiểm tra, phân tích và gỡ lỗi code.</li>
<li><strong>Nhà phát triển cấp cao</strong>: Ở vai trò này, bạn phải giám sát toàn bộ dự án, viết một số phần code và đóng vai trò là người liên lạc với quản lý cấp cao.</li>
<li><strong>Nhà phát triển web Java</strong>: Vị trí này thường nhấn mạnh vào back-end và nhà phát triển chịu trách nhiệm triển khai và duy trì code ở phía máy chủ. Vì ngày nay, nhiều máy chủ đang chuyển sang đám mây nên các nhà phát triển phải có kinh nghiệm và kỹ năng viết code trong môi trường đám mây.</li>
<li><strong>Kiến trúc sư Java</strong>: Kiến trúc sư bình thường làm công việc thiết kế các công trình xây dựng. Trong khi đó, kiến trúc sư Java thiết kế và phát triển bố cục của ứng dụng.</li>
<li><strong>Nhà phát triển Java EE</strong>: Những nhà phát triển này xây dựng và bảo trì phần mềm doanh nghiệp và thường được thuê bảo các doanh nghiệp lớn.</li>
<li><strong>Nhà phát triển Java Android</strong>: Thị phần cảu hệ điều hành di động Android lớn hơn đáng kể so với iOS. Do đó, nhu cầu nhà phát triển có khả năng xây dựng hoặc bổ sung thêm các tính năng cho Android, phát triển ứng dụng Android là rất cao.</li>
</ul>
<p>Nguồn: <a href="https://quantrimang.com/cong-nghe/lo-trinh-tro-thanh-nha-phat-trien-java-194656" target="_blank" rel="noopener noreferrer">https://quantrimang.com/cong-nghe/lo-trinh-tro-thanh-nha-phat-trien-java-194656</a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Cơ hội việc làm của Java</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/co-hoi-viec-lam-cua-java.html"/>
        <id>https://tritin5987.github.io/Blog/co-hoi-viec-lam-cua-java.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/10/u.png" medium="image" />

        <updated>2024-12-27T14:07:46+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/10/u.png" class="type:primaryImage" alt="" /></p>
                
<p>Các lập trình viên Java là những chuyên gia về ngôn ngữ lập trình Java. Tính đến năm 2018, có rất nhiều cơ hội việc làm cho lập trình viên Java. Với mức tăng trưởng dự kiến là 19% cho giai đoạn từ 2014-2024 (theo Cục thống kê lao động Hoa Kỳ cho tất cả các công việc lập trình ứng dụng), triển vọng nghề nghiệp với ngôn ngữ Java thực sự rất tươi sáng.</p>
<h2>Trình độ học vấn của lập trình viên Java</h2>
<p>Để được nhận vào vị trí lập trình viên Java, tối thiểu, bạn cần phải có một bằng cử nhân về khoa học máy tính, hệ thống thông tin, toán hoặc hoặc tương đương. Một vài vị trí có thể yêu cầu bằng thạc sỹ. Với sự hiểu biết cơ bản về lập trình Java, bạn cũng khá dễ dàng nhận được vị trí thử việc ở một số công ty.</p>
<p>Một số nhà tuyển dụng có thể chấp nhận những người nộp đơn không có bằng cấp chính thức trong những lĩnh vực kể trên nhưng có kiến thức và kinh nghiệm kỹ thuật. Tuy nhiên, nếu có bằng cấp, được đào tạo bài bản và có kinh nghiệm thì cơ hội nhận được việc làm của bạn càng cao hơn.</p>
<h2>Con đường sự nghiệp của lập trình viên Java</h2>
<p>Khi đã có một công việc, bạn có thể phát triển sự nghiệp của mình như thế nào? Tùy thuộc vào kinh nghiệm tích lũy được, sự nghiệp của bạn sẽ tiến lên theo con đường sau:</p>
<ul>
<li><strong>Junior Programmer:</strong> Bạn sẽ bắt đầu như một lập trình viên cơ bản, và giữ vị trí này 3-4 năm đầu trong sự nghiệp. Nhiệm vụ chủ yếu của vị trí này là code, gỡ lỗi, tham gia vào việc đánh giá code và làm tài liệu kỹ thuật. Ở giai đoạn này, bạn cũng nên tập trung vào việc học hỏi để tích lũy thêm kiến thức về hệ sinh thái Java và kiếm thêm chứng chỉ trong một hoặc nhiều lĩnh vực hơn.</li>
<li><strong>Senior Programmer:</strong> Khi có thêm nhiều kiến thức, kinh nghiệm và một số chứng chỉ, bạn có thể chuyển sang vai trò của lập trình viên cấp cao. Ở đây, trách nhiệm sẽ lớn hơn, bạn có thể tư vấn cho các lập trình viên cơ bản, tham gia vào việc thiết kế tổng thể và hoàn tất phần mềm. Dù vẫn phải động tay chân vào code, nhưng sẽ ít hơn, vì bạn có thể còn phải tiếp xúc với khách hàng, huấn luyện họ để họ hiểu về phần mềm. Tại thời điểm này, mục tiêu của bạn là chuyển dịch dần sang vai trò lãnh đạo, hãy học hỏi thêm và gia tăng bằng cấp về lĩnh vực của mình.</li>
<li><strong>Architect:</strong> Ở giai đoạn này, với hơn 10 năm kinh nghiệm trong lĩnh vực của mình, bạn có thể được đảm nhiệm vai trò của một Architect, bao gồm các nhiệm vụ liên kết với khách hàng và các client của phần mềm, thu thập, phân tích yêu cầu, chịu trách nhiệm về kiến trúc tổng thể của hệ thống. Bạn có thể đảm nhiệm vai trò quản lý này với trách nhiệm, nhiệm vụ ngày càng tăng, bao gồm cả việc phải giao tiếp trực tiếp với những quản lý cấp cao.</li>
<li><strong>Manager:</strong> Bạn đã tham gia vào lộ trình trở thành quản lý, có thể đã giắt lưng một hoặc vài khóa huấn luyện cấp cao và vài chứng chỉ liên quan. Nhiệm vụ chính lúc này bao gồm trách nhiệm tổng thể về việc phân phối phần mềm, quản lý tài chính, lập ngân sách và trình bày trước các quản lý cấp cao hơn.</li>
</ul>
<p>Tham khảo thêm: <a title="Project Manager, Product Owner hay Software Architect... là nghề gì?" href="https://quantrimang.com/cuoc-song/project-manager-product-owner-hay-software-architect-la-nghe-gi-124223" target="_blank" rel="noopener">Project Manager, Product Owner hay Software Architect... là nghề gì?</a></p>
<h2>Lĩnh vực ứng dụng Java</h2>
<p>Lập trình Java được sử dụng trong nhiều ngành công nghệ với những vai trò và vị trí khác nhau. Có thể nói rằng, hầu hết các lập trình viên Java đang hoạt động trong những lĩnh vực chính sau đây:</p>
<h3>Back-End Developer</h3>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2017/08/05/back-end-developer.jpg" alt="Back-end Developer" width="526" height="350" data-src="https://st.quantrimang.com/photos/image/2017/08/05/back-end-developer.jpg" data-i="0" data-was-processed="true" data-is-external-image="true"></figure>
<p>Một nhà lập trình back-end sẽ viết code cho các máy chủ back-end bao gồm máy chủ web, máy chủ cơ sở dữ liệu, và máy chủ ứng dụng. Hiện tại, công việc này có nhu cầu tuyển dụng khá lớn, với rất nhiều cơ hội nghề nghiệp khác nhau. Ngoài kiến thức cốt lõi về Java, bạn cần phải thành thạo các back-end stack dưới đây nữa:</p>
<ul>
<li>EJB hoặc Enterprise Java Beans</li>
<li>Spring được sử dụng trong nhiều tổ chức thay cho EJB</li>
<li>Hibernate được sử dụng thay thế cho EJB2</li>
<li>SQL được yêu cầu trong rất nhiều dự án, cả lớn và nhỏ</li>
<li>JSP và Servlets để làm việc với các stack của máy chủ web</li>
<li>Các dịch vụ REST được sử dụng để trình bày (expose) một API cho máy chủ web</li>
</ul>
<h3>Big Data Developer</h3>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2017/08/05/big-data-1.jpg" alt="Big Data Developer" width="585" height="350" data-src="https://st.quantrimang.com/photos/image/2017/08/05/big-data-1.jpg" data-i="1" data-was-processed="true" data-is-external-image="true"></figure>
<p>Một nhà lập trình Big Data chuyên làm việc với các bộ dữ liệu khủng. Lựa chọn hướng đi này thì con đường sự nghiệp có thể thăng tiến rất nhanh vì ngày càng có nhiều công ty tìm cách tận dụng những bộ dữ liệu khổng lồ để phục vụ cho các quyết định kinh doanh, quản lý, hoạch định chiến lược. Để được xem xét cho vị trí này, ứng viên cần phải có kiến thức về:</p>
<ul>
<li>Hadoop, đây là nền tảng đầu tiên đưa Big Data đến với cộng đồng</li>
<li>Spark với những tiến bộ đáng kể trong thời gian gần đây</li>
<li>Pig là một ngôn ngữ để viết những công việc xử lý dữ liệu lớn</li>
<li>MapReduce là công nghệ xử lý dữ liệu lớn</li>
</ul>
<h3>Android Developer</h3>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2017/08/05/lap-trinh-ung-dung-android.jpg" alt="Android Developer" width="600" height="296" data-src="https://st.quantrimang.com/photos/image/2017/08/05/lap-trinh-ung-dung-android.jpg" data-i="2" data-was-processed="true" data-is-external-image="true"></figure>
<p>Android dựa trên Java. Để phát triển một ứng dụng Android ở bất kỳ cấp độ phức tạp nào vượt ra khỏi mức cơ bản, bạn sẽ phải sử dụng đến Java. Khi đã nghiên cứu về nền tảng Android, cơ hội nghề nghiệp của bạn sẽ tăng vọt. Mỗi công ty có website, hay hoạt động trong lĩnh vực thương mại điện tử đều cần phải có ứng dụng Android (và iOS) để duy trì sự hiện diện của mình trên mọi nền tảng.</p>
<h3>Embedded Devices Developer</h3>
<figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2017/08/05/thiet-bi-nhung.jpg" alt="Embedded Devices Developer" width="622" height="350" data-src="https://st.quantrimang.com/photos/image/2017/08/05/thiet-bi-nhung.jpg" data-i="3" data-was-processed="true" data-is-external-image="true"></figure>
<p>Đây là một lựa chọn nghề nghiệp thích hợp, có cơ hội phát triển, với số lượng thiết bị lớn từ router đến các thiết bị mạng hay các trung tâm giải trí sử dụng Java bên trong, bạn sẽ không lo về việc mình sẽ làm gì sau khi kết thúc việc học.</p>
<p>Công việc Java của bạn đang tiến triển như thế nào? Bạn đang ở giai đoạn nào của tiến trình? Và bạn đang làm việc trong lĩnh vực ứng dụng nào? Bạn có kinh nghiệm quý báu nào với ngôn ngữ lập trình này không? Hãy chia sẻ với chúng tôi và những bạn đọc khác bằng cách bình luận bên dưới bài viết này nhé.</p>
<p>Chúc các bạn có được công việc phù hợp với nguyện vọng của mình!</p>
<p>Nguồn: <a href="https://quantrimang.com/lang-cong-nghe/lua-chon-lap-trinh-java-nghe-nghiep-nao-dang-cho-doi-ban-139458" target="_blank" rel="noopener noreferrer">https://quantrimang.com/lang-cong-nghe/lua-chon-lap-trinh-java-nghe-nghiep-nao-dang-cho-doi-ban-139458</a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>JavaScript là gì ?</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/javascript-la-gi.html"/>
        <id>https://tritin5987.github.io/Blog/javascript-la-gi.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/8/t.jpg" medium="image" />

        <updated>2024-12-26T22:39:36+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/8/t.jpg" class="type:primaryImage" alt="" /></p>
                
<h3><strong>1. JavaScript là gì?</strong></h3>
<p>JavaScript là 1 trong 3<strong> ngôn ngữ chính của lập trình web</strong>, và nó được dùng phổ biến trong suốt 20 năm qua. Từ thuở sơ khai, nó còn có tên là <strong>Mocha </strong>(năm 1995), sau đó được đổi thành Mona, Livescript, và cuối cùng là JavaScript như hiện nay.</p>
<p>Tính đến năm 2016, có đến 92% trang web hiện nay đang sử dụng JavaScript, và rất có thể bạn đã dùng qua rất nhiều trang web có sử dụng ngôn ngữ lập trình này.</p>
<figure class="lazy"><img loading="lazy"  title="Ngôn ngữ JavaScript" src="https://cdn.tgdd.vn/hoi-dap/1321801/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren.001.jpg" alt="Ngôn ngữ JavaScript" data-cke-saved-src="//cdn.tgdd.vn/hoi-dap/1321801/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren.001.jpg" data-is-external-image="true"></figure>
<p>Ngôn ngữ JavaScript</p>
<h3 id="hmenuid2"><strong>2. JavaScript có vai trò gì trong trình duyệt?</strong></h3>
<p>Thông thường, các trang web sẽ được nhúng trực tiếp JavaScript vào, hoặc sẽ sử dụng file <strong>.js</strong> để tham chiếu qua. Đây là ngôn ngữ phía máy khách, nghĩa là thay vì xử lý tập lệnh trên server của trang web, nó sẽ được tải về máy của khách truy cập và xử lý trên chính chiếc máy đó.</p>
<p>Cần chú ý, hiện nay có một số trình duyệt web phổ biến cho phép bạn bật/tắt JavaScript theo ý của bạn. Vậy nên, bạn cần biết những trang web mà bạn muốn truy cập sẽ bị ảnh hưởng như thế nào nếu như không có JavaScript hoạt động, từ đó sẽ quyết định có bật/tắt nó hay không.</p>
<figure class="lazy"><img loading="lazy"  title="JavaScript đóng vai trò quan trọng đối với các trình duyệt web" src="https://cdn.tgdd.vn/hoi-dap/1321801/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren.002.jpeg" alt="JavaScript đóng vai trò quan trọng đối với các trình duyệt web" data-cke-saved-src="//cdn.tgdd.vn/hoi-dap/1321801/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren.002.jpeg" data-is-external-image="true"></figure>
<p>JavaScript đóng vai trò quan trọng đối với các trình duyệt web</p>
<h3 id="hmenuid3"><strong>3. Ưu và nhược điểm của JavaScript</strong></h3>
<p>Khi so sánh với các đối thủ khác thì JavaScript có rất nhiều <strong>điểm mạnh</strong> có thể được kể đến dưới đây.</p>
<p><strong>- Đối với lập trình viên</strong>: Đây là ngôn ngữ dễ học, dễ để phát hiện và sửa lỗi hơn. Thông qua JavaScript thì lập trình viên cũng có thể kiểm tra dữ liệu đầu vào, nhằm giảm bớt công việc kiểm tra thủ công. JavaScript cũng khá linh hoạt, và nó có thể được sử dụng ở nhiều nền tảng, trình duyệt, và không cần những công cụ quá phức tạp bởi chúng có thể được biên dịch bởi HTML từ trình duyệt web.</p>
<p><strong>- Đối với khách truy cập</strong>: Ta có thể truy cập và tương tác với website hiệu quả hơn. Nhờ đặc tính gọn nhẹ mà chúng sẽ cho phép thực hiện các tác vụ trên trang web nhanh hơn.</p>
<figure class="lazy"><img loading="lazy"  title="Ưu điểm cho JavaScript" src="https://cdn.tgdd.vn/hoi-dap/1321801/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren.003.jpg" alt="Ưu điểm cho JavaScript" data-cke-saved-src="//cdn.tgdd.vn/hoi-dap/1321801/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren.003.jpg" data-is-external-image="true"></figure>
<p>Ưu điểm cho JavaScript</p>
<p>Tuy nhiên, công cụ nào cũng sẽ điểm mạnh và điểm yếu. Dưới đây là một số <strong>điểm yếu</strong> mà bạn nên cân nhắc qua.</p>
<p>- Nó rất dễ bị khai thác, thế nên chúng thu hút rất nhiều hacker thực hiện tìm kiếm lỗi bảo mật để lợi dụng, từ đó sẽ chèn cắm các mã độc vào <a href="https://www.thegioididong.com/may-tinh-de-ban" data-cke-saved-href="https://www.thegioididong.com/may-tinh-de-ban" target="_blank" rel="dofollow noopener">máy tính</a> của người sử dụng.</p>
<p>- Việc linh hoạt hỗ trợ cho các thiết bị cũng có thể tạo ra trải nghiệm không đồng nhất trên các thiết bị này, và đôi khi một số trình duyệt sẽ không hỗ trợ sử dụng JavaScript.</p>
<figure class="lazy"><img loading="lazy"  title="JavaScript rất dễ bị khai thác" src="https://cdn.tgdd.vn/hoi-dap/1321801/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren.004.jpg" alt="JavaScript rất dễ bị khai thác" data-cke-saved-src="//cdn.tgdd.vn/hoi-dap/1321801/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren.004.jpg" data-is-external-image="true"></figure>
<p>JavaScript rất dễ bị khai thác</p>
<p>Nguồn: <a href="https://www.thegioididong.com/hoi-dap/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren-1321801" target="_blank" rel="noopener noreferrer">https://www.thegioididong.com/hoi-dap/javascript-la-gi-co-vai-tro-gi-cach-bat-javascript-tren-1321801</a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Java là gì ?</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/java-la-gi.html"/>
        <id>https://tritin5987.github.io/Blog/java-la-gi.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/7/ro.png" medium="image" />

        <updated>2024-12-26T22:37:57+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/7/ro.png" class="type:primaryImage" alt="" /></p>
                
<h1 class="text-textOnWhitePrimary h2-semibold">Java là gì? Tổng quan về ngôn ngữ lập trình Java cho người mới</h1>
<p class="mb:mt-2 mb:pb-6 pc:mt-3 b1-regular">Java là ngôn ngữ lập trình phổ biến và rất hữu ích cho các lập trình viên. Nếu bạn quan tâm đến việc học lập trình và muốn hiểu hơn về Java, bài viết này sẽ giúp bạn!</p>
<h2 id="article-detail-0"><strong>Java là gì?</strong></h2>
<p>Java là ngôn ngữ lập trình đa nền tảng (cross-platform), được phát triển bởi James Gosling tại Sun Microsystems (nay là Oracle Corporation). Ngôn ngữ lập trình này ra đời vào năm 1995 và được thiết kế để có thể chạy trên các nền tảng khác nhau, từ máy tính cá nhân đến thiết bị di động, các máy chủ và thiết bị nhúng.</p>
<p>Java sử dụng cấu trúc lập trình hướng đối tượng (object-oriented programming - OOP) và được xây dựng trên cơ sở của ngôn ngữ lập trình C++. Nó cung cấp một môi trường chạy ảo (virtual machine) gọi là Java Virtual Machine (JVM), giúp các chương trình Java có thể chạy trên nhiều nền tảng khác nhau mà không cần phải biên dịch lại.</p>
<p><img src="https://cdn2.fptshop.com.vn/unsafe/Uploads/images/tin-tuc/156801/Originals/java-la-gi%20(3).jpg" alt="Java là gì? Có nên học ngôn ngữ lập trình này?" width="700" height="467" loading="lazy" data-is-external-image="true"></p>
<p>Hiện tại, Java là một trong những ngôn ngữ lập trình phổ biến nhất hiện nay, được sử dụng rộng rãi trong các ứng dụng di động, phát triển web, lập trình trên các thiết bị nhúng, máy tính cá nhân, máy chủ, game và nhiều lĩnh vực khác.</p>
<h2 id="article-detail-1"><strong>Các tính năng của Java</strong></h2>
<h3><strong>Đa nền tảng</strong></h3>
<p>Java được thiết kế để có thể chạy trên nhiều nền tảng khác nhau, vì vậy nó rất phù hợp cho việc phát triển các ứng dụng đa nền tảng. Java sử dụng một máy ảo (JVM - Java Virtual Machine) để chạy mã nguồn, vì vậy mã nguồn được viết một lần và có thể chạy trên nhiều hệ điều hành khác nhau mà không cần thay đổi.</p>
<h3><strong>Quản lý bộ nhớ tự động</strong></h3>
<p>Java có tính năng tự động quản lý bộ nhớ, tức là nó tự động thu dọn các vùng nhớ không sử dụng nữa để giảm thiểu các lỗi bộ nhớ. Điều này giúp cho các ứng dụng được viết bằng Java có thể chạy ổn định và tránh các lỗi liên quan đến bộ nhớ.</p>
<h3><strong>Hỗ trợ đa luồng</strong></h3>
<p>Java có thể xử lý đa luồng, cho phép chương trình thực hiện nhiều tác vụ cùng một lúc. Điều này giúp cho các ứng dụng có thể chạy nhanh và hiệu quả hơn, đặc biệt là khi phải xử lý nhiều tác vụ cùng một lúc.</p>
<p><img src="https://cdn2.fptshop.com.vn/unsafe/Uploads/images/tin-tuc/156801/Originals/java-la-gi.jpg" alt="Java là gì? Tổng quan về ngôn ngữ lập trình Java cho người mới" width="750" height="375" loading="lazy" data-is-external-image="true"></p>
<h3><strong>Tính bảo mật cao</strong></h3>
<p>Java có các tính năng bảo mật như kiểm tra kiểu tĩnh và kiểm tra lỗi trên đường dẫn. Java được thiết kế để giảm thiểu các lỗ hổng bảo mật và các vấn đề liên quan đến an ninh.</p>
<h3><strong>Hỗ trợ các thư viện và công cụ phát triển mạnh mẽ</strong></h3>
<p>Java có các thư viện tiêu chuẩn và các công cụ phát triển như IDE (Integrated Development Environment) để giúp các nhà phát triển tạo ra các ứng dụng dễ dàng hơn. Các thư viện và công cụ này cung cấp các tính năng như: tạo giao diện người dùng, xử lý dữ liệu, kết nối cơ sở dữ liệu và nhiều hơn nữa,...</p>
<h3><strong>Tính di động</strong></h3>
<p>Java được sử dụng rộng rãi trong lĩnh vực di động bao gồm: các thư viện hỗ trợ việc phát triển ứng dụng di động, đóng gói ứng dụng thành các file .jar hoặc .apk, cung cấp các tính năng như xử lý đa nhiệm, kết nối mạng và tích hợp với các thiết bị phần cứng như máy ảnh.</p>
<h3><strong>Tính độc lập với nền tảng</strong></h3>
<p>Java có thể chạy trên nhiều nền tảng khác nhau và không phụ thuộc vào bất kỳ nền tảng cụ thể nào. Điều này giúp cho các ứng dụng Java có thể được triển khai trên nhiều hệ thống khác nhau mà không cần sửa đổi mã nguồn.</p>
<h3><strong>Tính kế thừa và đa hình</strong></h3>
<p>Java là ngôn ngữ lập trình hướng đối tượng (OOP), vì vậy nó có các tính năng như kế thừa, đa hình và đóng gói. Các tính năng này giúp cho mã nguồn được tái sử dụng và giảm thiểu sự trùng lặp trong mã nguồn.</p>
<h3><strong>Tính mở rộng</strong></h3>
<p>Java có tính năng mở rộng, cho phép các nhà phát triển thêm các tính năng mới vào ngôn ngữ bằng cách tạo các thư viện và API riêng. Điều này giúp cho Java có thể được sử dụng trong nhiều lĩnh vực khác nhau và được phát triển theo các hướng khác nhau.</p>
<p><img src="https://cdn2.fptshop.com.vn/unsafe/Uploads/images/tin-tuc/156801/Originals/java-la-gi%20(1).jpg" alt="Java là gì? Có nên học ngôn ngữ lập trình này?" width="700" height="467" loading="lazy" data-is-external-image="true"></p>
<h2 id="article-detail-2"><strong>Ưu &amp; nhược điểm của Java</strong></h2>
<h3><strong>Ưu điểm của Java</strong></h3>
<ul>
<li>Độ tin cậy cao</li>
<li>Tính đa nền tảng</li>
<li>Quản lý bộ nhớ tự động</li>
<li>Công cụ phát triển phong phú</li>
<li>Hỗ trợ đa luồng</li>
</ul>
<p><img src="https://cdn2.fptshop.com.vn/unsafe/Uploads/images/tin-tuc/156801/Originals/java-la-gi%20(2).png" alt="Java là gì? Có nên học ngôn ngữ lập trình này?" width="700" height="393" loading="lazy" data-is-external-image="true"></p>
<h3><strong>Nhược điểm của Java</strong></h3>
<ul>
<li>Tốc độ chậm hơn so với các ngôn ngữ lập trình gần sát với phần cứng, chẳng hạn như C hoặc C++.</li>
<li>Java có thể chạy trên nhiều nền tảng khác nhau, nhưng ứng dụng này có thể cần đến một trình biên dịch hoặc máy ảo Java riêng biệt để có thể chạy trên các thiết bị di động.</li>
<li>Sử dụng bộ nhớ lớn hơn so với một số ngôn ngữ lập trình khác.</li>
<li>Cú pháp phức tạp hơn so với một số ngôn ngữ lập trình khác</li>
</ul>
<p><em><strong>Xem thêm:</strong> Làm thế nào để quản lý bộ nhớ RAM cấp cho Java?</em></p>
<h2 id="article-detail-3"><strong>Java được sử dụng để làm gì?</strong></h2>
<h3><strong>Phát triển ứng dụng máy tính</strong></h3>
<p>Java là một trong những ngôn ngữ lập trình phổ biến nhất để phát triển các ứng dụng máy tính đa nền tảng. Java có thể được sử dụng để phát triển các ứng dụng trên máy tính để bàn, máy chủ và các ứng dụng trên nền web. Nó cung cấp các thư viện mạnh mẽ để xử lý các nhu cầu của các ứng dụng máy tính như xử lý dữ liệu, đồ họa, đầu vào và đầu ra.</p>
<h3><strong>Phát triển ứng dụng di động</strong></h3>
<p>Java là một trong những ngôn ngữ lập trình phổ biến nhất để phát triển các ứng dụng di động cho hệ điều hành Android. Nó được sử dụng để phát triển các ứng dụng cho điện thoại di động và máy tính bảng. Java cung cấp một số khung như Android SDK để phát triển ứng dụng di động.</p>
<h3><strong>Phát triển game</strong></h3>
<p>Java cũng được sử dụng để phát triển các game trên nhiều nền tảng khác nhau, bao gồm các game trên máy tính, điện thoại di động và máy tính bảng. Các tính năng của Java như: tính đa luồng, xử lý đồ họa âm thanh đã được sử dụng để phát triển các game phức tạp.</p>
<h3><strong>Phát triển web</strong></h3>
<p>Java cung cấp các công cụ để phát triển các ứng dụng web động và tĩnh. Servlets, JSP (Java Server Pages), Spring Framework, Struts Framework,... là một số ví dụ về các công cụ phổ biến được sử dụng để phát triển các ứng dụng web bằng Java. Java cũng được sử dụng để phát triển các ứng dụng trên máy chủ và trình duyệt web.</p>
<h3><strong>Phát triển các hệ thống quản lý cơ sở dữ liệu</strong></h3>
<p>Java được dùng để phát triển các hệ thống quản lý cơ sở dữ liệu như Oracle và MySQL. Đồng thời, Java cũng cung cấp các API để kết nối và tương tác với các cơ sở dữ liệu, cho phép người phát triển tạo các ứng dụng quản lý cơ sở dữ liệu phức tạp và linh hoạt.</p>
<h3><strong>Phát triển các ứng dụng IoT</strong></h3>
<p>Java có thể phát triển các ứng dụng IoT (Internet of Things). Java có tính năng đa nền tảng, cho phép các ứng dụng được phát triển trên các thiết bị di động và chạy trên các thiết bị IoT khác nhau. Ngôn ngữ này cung cấp các công cụ và thư viện để phát triển các ứng dụng IoT, dùng để kết nối các thiết bị và xử lý dữ liệu.</p>
<h3><strong>Phát triển các ứng dụng trí tuệ nhân tạo</strong></h3>
<p>Java cũng được sử dụng để phát triển các ứng dụng trí tuệ nhân tạo (AI). Các tính năng của Java như xử lý đa luồng và tính năng hướng đối tượng cho phép người phát triển tạo các ứng dụng AI phức tạp.</p>
<h3><strong>Phát triển các ứng dụng blockchain</strong></h3>
<p>Java cũng có thể được sử dụng để phát triển các ứng dụng blockchain. Các tính năng của Java như độ bảo mật cao, độ tin cậy và khả năng xử lý các giao dịch trên mạng đã được sử dụng để phát triển các ứng dụng blockchain phức tạp.</p>
<h2 id="article-detail-4"><strong>Có nên học lập trình Java?</strong></h2>
<p><strong><img src="https://cdn2.fptshop.com.vn/unsafe/Uploads/images/tin-tuc/156801/Originals/java-la-gi%20(2).jpg" alt="Java là gì? Có nên học ngôn ngữ lập trình này?" width="700" height="364" loading="lazy" data-is-external-image="true"></strong></p>
<p>Java là một trong những ngôn ngữ lập trình được sử dụng rộng rãi nhất trên thế giới, đặc biệt là trong lĩnh vực phát triển phần mềm doanh nghiệp và các ứng dụng web.</p>
<p>Với sự phổ biến của Java, cơ hội việc làm trong lĩnh vực phát triển phần mềm và công nghệ thông tin liên quan đến Java là rất lớn. Nếu bạn là một lập trình viên Java tốt, bạn sẽ có cơ hội để làm việc tại các công ty công nghệ lớn như Oracle, IBM, Amazon và nhiều công ty khác.</p>
<p><img src="https://cdn2.fptshop.com.vn/unsafe/Uploads/images/tin-tuc/156801/Originals/java-la-gi%20(1).png" alt="Java là gì? Có nên học ngôn ngữ lập trình này?" width="700" height="400" loading="lazy" data-is-external-image="true"></p>
<p>Cộng đồng lập trình Java rất lớn, với nhiều diễn đàn, tài liệu và các tài nguyên khác, giúp cho việc học tập và giải đáp thắc mắc của bạn trở nên dễ dàng hơn. Nếu bạn yêu thích ngành nghề này, có thể cân nhắc học và sớm trở thành một lập trình viên giàu kinh nghiệm trong tương lai.</p>
<p>Hi vọng qua bài viết sẽ giúp các bạn hiểu hơn về thuật ngữ "Java là gì" trước khi đầu tư thời gian và công sức để tìm hiểu ngôn ngữ lập trình này.</p>
<p>Nguồn: <a href="https://fptshop.com.vn/tin-tuc/danh-gia/java-la-gi-156801" target="_blank" rel="noopener noreferrer">https://fptshop.com.vn/tin-tuc/danh-gia/java-la-gi-156801</a></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Java và JavaScript</title>
        <author>
            <name>Bùi Dương Trí</name>
        </author>
        <link href="https://tritin5987.github.io/Blog/su-khac-nhau-giua-java-va-java-script.html"/>
        <id>https://tritin5987.github.io/Blog/su-khac-nhau-giua-java-va-java-script.html</id>
        <media:content url="https://tritin5987.github.io/Blog/media/posts/3/e.png" medium="image" />

        <updated>2024-12-26T20:57:02+07:00</updated>
            <summary></summary>
        <content type="html">
            <![CDATA[
                    <p><img src="https://tritin5987.github.io/Blog/media/posts/3/e.png" class="type:primaryImage" alt="" /></p>
                
<p>Mặc dù tên của Java và JavaScript dường như có sự liên quan (JavaScript có vẻ như là một script trong Java?), nhưng đó là điểm tương đồng duy nhất. Hai ngôn ngữ này không liên quan gì đến nhau xét về mặt kỹ thuật.</p>
<h2>Tại sao Java và JavaScript lại có tên gọi tương tự nhau?</h2>
<p>Sự tương đồng về tên gọi này là có chủ ý. Java, được tạo ra vào năm 1990 bởi James A. Gosling, một nhà khoa học máy tính tại Sun Microsystems, đã rất nổi tiếng vào thời điểm Netscape đặt tên cho ngôn ngữ lập trình của mình là JavaScript vào cuối năm 1995.</p>
<p>Việc dựa vào danh tiếng của Java là một động thái kinh doanh thông minh. Như một người dùng Quora từng đưa ra giả thuyết, Netscape muốn mọi người nghĩ rằng Javascript có liên quan đến Java và họ đã thành công.</p>
<figure><figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2020/05/07/java-va-javascript-2.jpg" alt="Java được tạo ra vào năm 1990 bởi James A. Gosling" width="650" height="488" data-src="https://st.quantrimang.com/photos/image/2020/05/07/java-va-javascript-2.jpg" data-was-processed="true" data-i="0" data-is-external-image="true"></figure>
<figcaption>Java được tạo ra vào năm 1990 bởi James A. Gosling</figcaption>
</figure>
<p>Lời giải thích đó hơi khiên cưỡng và không hoàn toàn chính xác. Thực tế là JavaScript, được thiết kế bởi Brendan Eich của Netscape, ban đầu gọi là LiveScript, nhưng một thỏa thuận marketing (hay có thể gọi vui là một “mánh khóe”) giữa Netscape và Sun đã khiến Netscape đổi tên thành JavaScript, vì mục đích hợp tác thương hiệu. Vào thời điểm đó, Sun đã đồng ý cho Netscape đóng gói trình duyệt hàng đầu với Java runtime. Việc thay đổi tên là một phần của thỏa thuận.</p>
<figure><figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2020/05/07/java-va-javascript-3.jpg" alt="JavaScript, được thiết kế bởi Brendan Eich của Netscape, ban đầu gọi là LiveScript" width="650" height="366" data-src="https://st.quantrimang.com/photos/image/2020/05/07/java-va-javascript-3.jpg" data-i="1" data-was-processed="true" data-is-external-image="true"></figure>
<figcaption>JavaScript, được thiết kế bởi Brendan Eich của Netscape, ban đầu gọi là LiveScript</figcaption>
</figure>
<p>Kể từ đó, mức độ phổ biến của Java có thể đã bị phai nhạt, nhưng JavaScript thì không. Bạn có thể cho rằng JavaScript có được ngày hôm nay là nhờ vào sự nổi tiếng của Java. Nhưng có lẽ không phải ai cũng đồng tình với quan điểm này. Điều cần nhấn mạnh ở đây là ngoài quy ước đặt tên, hai ngôn ngữ không có nhiều điểm chung.</p>
<h2>Java và JavaScript có gì giống và khác nhau?</h2>
<p>Sau đây là so sánh nhanh về những nét tương đồng và khác biệt giữa Java và JavaScript:</p>
<h3>Điểm khác biệt</h3>
<ul>
<li>Java là ngôn ngữ lập trình tĩnh, hướng đối tượng, hoạt động trên nhiều nền tảng. JavaScript là ngôn ngữ lập trình động (hay ngôn ngữ kịch bản - scripted language) được sử dụng để làm cho các trang web và ứng dụng trở nên sinh động.</li>
<li>Java dựa trên lớp (class), còn JavaScript thì động.</li>
<li>Java là một ngôn ngữ độc lập. JavaScript phụ thuộc nhiều hơn, nghĩa là nó hoạt động với HTML và CSS trên các trang web để tạo nội dung động.</li>
<li>Vào năm 2019, JavaScript là thứ bắt buộc phải học đối với các nhà phát triển web, vì nó được sử dụng khá nhiều ở mọi nơi, trong khi Java được coi là ngôn ngữ lập trình thế hệ trước (tuy nhiên, chắc chắn rất nhiều trang web vẫn sử dụng nó).</li>
</ul>
<h3>Điểm tương đồng</h3>
<p>Như bài viết đã nói ở trên, không có nhiều điểm tương đồng giữa Java và JavaScript. Có thể điểm qua một số nét giống nhau ở cả 2 ngôn ngữ lập trình này như sau:</p>
<ul>
<li>Cả Java và JavaScript thường được sử dụng nhiều nhất trong các ứng dụng phía máy khách</li>
<li>Cả Java và JavaScript đều sử dụng cú pháp C</li>
<li>JavaScript sao chép một số quy ước đặt tên của Java.</li>
</ul>
<h2>Bạn nên học Java hay JavaScript?</h2>
<p>Một lần nữa, điều này giống như so sánh giữa táo và cam. Nhưng nếu buộc phải chọn, hãy chọn JavaScript.</p>
<figure><figure class="lazy lightbox loaded"><img loading="lazy"  src="https://st.quantrimang.com/photos/image/2020/05/07/java-va-javascript-1.jpg" alt="Bạn nên học Java hay JavaScript?" width="650" height="366" data-src="https://st.quantrimang.com/photos/image/2020/05/07/java-va-javascript-1.jpg" data-i="2" data-was-processed="true" data-is-external-image="true"></figure>
<figcaption>Bạn nên học Java hay JavaScript?</figcaption>
</figure>
<p>Theo GitHub, tính đến năm 2018, JavaScript đã được dùng để tạo nhiều kho lưu trữ hơn bất kỳ ngôn ngữ nào khác. GitHub cũng báo cáo rằng JavaScript và Python đang ngày càng trở nên phổ biến qua từng năm, đặc biệt là so với các ngôn ngữ khác như Ruby.</p>
<p>Đừng hiểu lầm! Java vẫn được sử dụng rộng rãi và rất phổ biến, đi kèm theo đó là vô số lý do tại sao bạn nên học Java. Nhưng JavaScript là điểm khởi đầu lý tưởng cho những người mới bắt đầu quan tâm đến việc học lập trình, đặc biệt là người yêu thích công việc phát triển web front-end hoặc full stack. Thực sự, am hiểu về Javascript là một kỹ năng đủ linh hoạt để áp dụng cho một loạt các vai trò liên quan đến công nghệ.</p>
<p>Rất khó để chọn lựa giữa hai ngôn ngữ này. Vì vậy, nếu bạn thực sự không chắc chắn, hãy thử xem xét mục tiêu cuối cùng và cân nhắc ưu, nhược điểm của từng ngôn ngữ.</p>
<p>Chúc bạn có được lựa chọn phù hợp!</p>
<p>Nguồn: <a href="https://quantrimang.com/cong-nghe/java-va-javascript-co-gi-khac-nhau-171641" target="_blank" rel="noopener noreferrer">https://quantrimang.com/cong-nghe/java-va-javascript-co-gi-khac-nhau-171641</a></p>
            ]]>
        </content>
    </entry>
</feed>
